{"version":3,"sources":["../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","RegExp","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","state","column","stack","parent","style","indented","tokenize","line","finishContinue","rubyInQuote","endQuote","stream","peek","rubyState","length","next","startRubySplat","runSplat","context","prev","backUp","eatSpace","startState","token","match","pat","offset","cur","current","idx","search","pos","restore","backup","maybeBackup","htmlState","startHtmlLine","lastTokenize","htmlLine","eol","startHtmlMode","comment","skipToEnd","attributeWrapper","eat","attributeWrapperAssign","attributeWrapperValue","ch","readQuoted","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","mode","hasOwnProperty","query","spec","mimeModes","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","m","startSubMode","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","sol","indentation","blankLine","innerMode","defineMIME","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","closure","isInAttribute","inAttribute","stringStartCol","terminator","Context","this","indent","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","toLowerCase","modeSpec","tagInfo","tagText","findMatchingMode","endTagA","endTag","localState","localMode","local","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","newtok","tokenBase","readBlockComment","phrase","mayIndent","found","indexOf","regexpAhead","delim","propertyIsEnumerable","pop","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold"],"mappings":"qGAQG,SAAUA,GACX,aAEAA,EAAWC,WAAW,QAAQ,SAAUC,GACtC,IAAIC,EAAWH,EAAWI,QAAQF,EAAQ,CACxCG,KAAM,cAEJC,EAAWN,EAAWI,QAAQF,EAAQ,QACtCK,EAAQ,CACVC,KAAML,EACNM,KAAMH,GAEJI,EAAW,CACbD,KAAM,OACNE,WAAY,aACZC,IAAK,WACLC,KAAM,cACNC,KAAM,cACNC,KAAM,cACNC,KAAM,cAENC,OAAQ,eACRC,SAAU,kBACVC,SAAU,kBACVC,QAAS,iBAETC,OAAQ,gBAERC,KAAM,cAENC,UAAW,mBAEXC,KAAM,cAENC,QAAS,iBAETC,SAAU,kBAEVC,IAAK,qBAGHC,EAAiB,SAAUC,GAC7B,IAAIC,EAAM,GAEV,IAAK,IAAIC,KAAOF,EACdC,EAAIE,KAAKD,GAGX,OAAO,IAAIE,OAAO,KAAOH,EAAII,KAAK,KAAO,MAPtB,CAQnBxB,GAEEyB,EAAW,CACb,YAAe,UACf,WAAc,mBACd,QAAW,MACX,OAAU,gBACV,UAAa,sBACb,cAAiB,YACjB,YAAe,kBACf,kBAAqB,KACrB,YAAe,KACf,iBAAoB,MAElBC,EAAU,CACZ,IAAK,IACL,IAAK,IACL,IAAK,KAEHC,EAAgB,+IAChBC,EAAWD,EAAgB,uCAC3BE,EAAa,IAAIN,OAAO,MAAQI,EAAgB,SAAWC,EAAW,MAAQA,EAAW,OACzFE,EAAsB,IAAIP,OAAO,MAAQI,EAAgB,SAAWC,EAAW,eAC/EG,EAA6B,IAAIR,OAAO,MAAQI,EAAgB,SAAWC,EAAW,MACtFI,EAAkB,yBAClBC,EAAgB,sBAgCpB,SAASC,EAAaC,EAAOC,GAC3BD,EAAME,MAAQ,CACZC,OAAQH,EAAME,MACdE,MAAO,eACPC,SAAUJ,EACVK,SAAUN,EAAMO,MAElBP,EAAMO,KAAOP,EAAMM,SAGrB,SAASE,EAAeR,GAClBA,EAAMO,MAAQP,EAAMM,WACtBN,EAAMO,KAAOP,EAAME,MAAMI,SACzBN,EAAME,MAAQF,EAAME,MAAMC,QAoC9B,SAASM,EAAYC,EAAUJ,GAE7B,OAAO,SAAUK,EAAQX,GAGvB,OAFSW,EAAOC,QAENF,GAA+C,GAAnCV,EAAMa,UAAUP,SAASQ,QAE7CH,EAAOI,OACPf,EAAMM,SAAWA,EACV,qBAEA1C,EAAK+C,EAAQX,IAK1B,SAASgB,EAAeV,GACtB,IAAIO,EAEAI,EAAW,SAAkBN,EAAQX,GACvC,GAAuC,GAAnCA,EAAMa,UAAUP,SAASQ,SAAgBd,EAAMa,UAAUK,QAAQC,KAAM,CAGzE,GAFAR,EAAOS,OAAO,GAEVT,EAAOU,WAGT,OAFArB,EAAMa,UAAYA,EAClBb,EAAMM,SAAWA,EACVA,EAASK,EAAQX,GAG1BW,EAAOI,OAGT,OAAOnD,EAAK+C,EAAQX,IAGtB,OAAO,SAAUW,EAAQX,GAIvB,OAHAa,EAAYb,EAAMa,UAClBb,EAAMa,UAAY1D,EAAWmE,WAAW7D,GACxCuC,EAAMM,SAAWW,EACVrD,EAAK+C,EAAQX,IAIxB,SAASpC,EAAK+C,EAAQX,GACpB,OAAOvC,EAAS8D,MAAMZ,EAAQX,EAAMa,WAWtC,SAASlD,EAAKgD,EAAQX,GACpB,OAAIW,EAAOa,MAAM,SACfxB,EAAMM,SAAWG,EAAY,IAAKT,EAAMM,UACjC,MAvHX,SAAqBK,EAAQX,EAAOyB,EAAKC,EAAQtB,GAC/C,IAAIuB,EAAMhB,EAAOiB,UACbC,EAAMF,EAAIG,OAAOL,GAOrB,OALII,GAAO,IACT7B,EAAMM,SAvBV,SAAgByB,EAAKzB,EAAUF,GAC7B,IAAI4B,EAAU,SAAiBrB,EAAQX,GAGrC,OAFAA,EAAMM,SAAWA,EAEbK,EAAOoB,IAAMA,GACfpB,EAAOoB,IAAMA,EACN3B,GAGFJ,EAAMM,SAASK,EAAQX,IAGhC,OAAO,SAAUW,EAAQX,GAEvB,OADAA,EAAMM,SAAW0B,EACV1B,EAASK,EAAQX,IASPiC,CAAOtB,EAAOoB,IAAK/B,EAAMM,SAAUF,GACpDO,EAAOS,OAAOO,EAAIb,OAASe,EAAMH,IAG5BtB,EAiHA8B,CAAYvB,EAAQX,EAAO,WAAY,EAAG1C,EAASiE,MAAMZ,EAAQX,EAAMmC,YAGhF,SAASC,EAAcC,GACrB,OAAO,SAAU1B,EAAQX,GACvB,IAAII,EAnBR,SAAkBO,EAAQX,GACxB,OAAIW,EAAOa,MAAM,QACR,mBAGF7D,EAAKgD,EAAQX,GAcNsC,CAAS3B,EAAQX,GAE7B,OADIW,EAAO4B,QAAOvC,EAAMM,SAAW+B,GAC5BjC,GAIX,SAASoC,EAAc7B,EAAQX,EAAO0B,GASpC,OARA1B,EAAME,MAAQ,CACZC,OAAQH,EAAME,MACdE,MAAO,OACPC,SAAUM,EAAOV,SAAWyB,EAE5BpB,SAAUN,EAAMO,MAElBP,EAAMO,KAAOP,EAAMM,SAAW3C,EACvB,KAGT,SAAS8E,EAAQ9B,EAAQX,GAEvB,OADAW,EAAO+B,YACA1C,EAAME,MAAME,MAcrB,SAASuC,EAAiBhC,EAAQX,GAChC,OAAIW,EAAOiC,IAAI5C,EAAME,MAAMQ,WACzBV,EAAMO,KAAOP,EAAME,MAAMK,KACzBP,EAAMM,SAAWN,EAAME,MAAMI,SAC7BN,EAAME,MAAQF,EAAME,MAAMC,OACnB,MAGLQ,EAAOa,MAAM5B,IACfI,EAAMM,SAAWuC,EACV,kBAGTlC,EAAOI,OACA,MAGT,SAAS8B,EAAuBlC,EAAQX,GACtC,OAAIW,EAAOa,MAAM,SACfxB,EAAMM,SAAWwC,EACV,MAGFH,EAAiBhC,EAAQX,GAGlC,SAAS8C,EAAsBnC,EAAQX,GACrC,IAAI+C,EAAKpC,EAAOC,OAEhB,MAAU,KAANmC,GAAmB,KAANA,GACf/C,EAAMM,SAAW0C,EAAWD,EAAI,UAAU,GAAM,EAAOJ,GACvDhC,EAAOI,OACAf,EAAMM,SAASK,EAAQX,IAGtB,KAAN+C,EACK/B,EAAe2B,EAAf3B,CAAiCL,EAAQX,GAG9CW,EAAOa,MAAM,wBACfxB,EAAMM,SAAWqC,EACV,WAGF3B,EAAe2B,EAAf3B,CAAiCL,EAAQX,GAgBlD,SAASiD,EAAItC,EAAQX,GACnB,GAAIW,EAAOa,MAAM,QAEf,OADAxB,EAAMM,SAAWG,EAAY,IAAKT,EAAMM,UACjC,KAGT,IAAI4C,EAAY,IAAI/F,EAAWgG,aAAaxC,EAAOyC,OAAOC,MAAMrD,EAAME,MAAMG,UAAWM,EAAO2C,SAC9FJ,EAAUnB,IAAMpB,EAAOoB,IAAM/B,EAAME,MAAMG,SACzC6C,EAAUK,MAAQ5C,EAAO4C,MAAQvD,EAAME,MAAMG,SAC7C6C,EAAUM,cAAgB7C,EAAO6C,cAAgBxD,EAAME,MAAMG,SAC7D6C,EAAUO,gBAAkB9C,EAAO8C,gBAAkBzD,EAAME,MAAMG,SACjE,IAAID,EAAQJ,EAAM0D,QAAQnC,MAAM2B,EAAWlD,EAAM2D,UAEjD,OADAhD,EAAOoB,IAAMmB,EAAUnB,IAAM/B,EAAME,MAAMG,SAClCD,EAGT,SAASwD,EAASjD,EAAQX,GAGxB,OAFAA,EAAME,MAAMG,SAAWM,EAAOV,SAC9BD,EAAMO,KAAOP,EAAMM,SAAW2C,EACvBjD,EAAMM,SAASK,EAAQX,GAsBhC,SAASzC,EAAQsG,GACf,OAAKnG,EAAMoG,eAAeD,GAInBnG,EAAMmG,GAHJnG,EAAMmG,GArBjB,SAAoBA,GAClB,IAAIE,EAAQlG,EAASgG,GACjBG,EAAO7G,EAAW8G,UAAUF,GAEhC,GAAIC,EACF,OAAO7G,EAAWI,QAAQF,EAAQ2G,GAGpC,IAAIE,EAAU/G,EAAWO,MAAMqG,GAE/B,OAAIG,EACKA,EAAQ7G,EAAQ,CACrBG,KAAMuG,IAIH5G,EAAWI,QAAQF,EAAQ,QAKX8G,CAAWN,GAqBpC,SAASO,EAAYzD,EAAQ0D,GAE3B,OADA1D,EAAO+B,YACA,cAGT,SAAS4B,EAAU3D,EAAQX,GACzB,IAnPwBC,EAAQK,EAqPhC,GAAU,KAFDK,EAAOC,OAGd,OAAQZ,EAAMM,SAAW8B,EAAcpC,EAAMM,WAAWK,EAAQX,GAGlE,GAAIW,EAAOa,MAAM,SACf,OAAOgB,EAAc7B,EAAQX,EAAO,GAGtC,GAAIW,EAAOa,MAAM,kBACf,OAxJJ,SAAqBb,EAAQX,GAQ3B,OAPAA,EAAME,MAAQ,CACZC,OAAQH,EAAME,MACdE,MAAO,UACPC,SAAUL,EAAMK,SAAW,EAC3BC,SAAUN,EAAMO,MAElBP,EAAMO,KAAOkC,EACNA,EAAQ9B,EAAQX,GAgJduE,CAAY5D,EAAQX,GAG7B,GAAIW,EAAOa,MAAM,iBAEf,OADAxB,EAAMM,SArRV,SAAyBL,EAAQK,GAC/B,OAAO,SAAUK,EAAQX,GAGvB,GAFAQ,EAAeR,GAEXW,EAAOa,MAAM,QAEf,OADAzB,EAAaC,EAAOC,GACb,mBAGT,IAAIG,EAAQE,EAASK,EAAQX,GAM7B,OAJIW,EAAO4B,OAAS5B,EAAOiB,UAAUJ,MAAM,4BACzCb,EAAOS,OAAO,GAGThB,GAsQUoE,CAAgB7D,EAAOV,UAlQlBA,EAkQ6CU,EAAOV,SAlQ5CK,EAkQsD1C,EAjQ/E,SAAU+C,EAAQX,GACvBQ,EAAeR,GACf,IAAII,EAAQE,EAASK,EAAQX,GAM7B,OAJIW,EAAO4B,OAAS5B,EAAOiB,UAAUJ,MAAM,OACzCzB,EAAaC,EAAOC,GAGfG,KA0PA,aAGT,GAAIO,EAAOa,MAAM,cAEf,OADAxB,EAAMM,SAAW8D,EACV,UAGT,IAAIK,EAAI9D,EAAOa,MAAMzC,GAErB,OAAI0F,EA/CN,SAAsBZ,EAAM7D,GAC1B,IAAI0D,EAAUnG,EAAQsG,GAClBF,EAAWxG,EAAWmE,WAAWoC,GAUrC,OATA1D,EAAM0D,QAAUA,EAChB1D,EAAM2D,SAAWA,EACjB3D,EAAME,MAAQ,CACZC,OAAQH,EAAME,MACdE,MAAO,MACPC,SAAUL,EAAMK,SAAW,EAC3BC,SAAUN,EAAMO,MAElBP,EAAMO,KAAOP,EAAMM,SAAWsD,EACvB,cAoCEc,CAAaD,EAAE,GAAIzE,GAGrB2E,EAAQhE,EAAQX,GAGzB,SAAS4E,EAAKjE,EAAQX,GACpB,OAAIA,EAAM6E,YACDP,EAAU3D,EAAQX,GAGpB2E,EAAQhE,EAAQX,GAGzB,SAAS2E,EAAQhE,EAAQX,GACvB,OAAIW,EAAOiC,IAAI,MACb5C,EAAMM,SAAWU,EAAe8D,GACzB,MAGLnE,EAAOa,MAAM9B,IACfM,EAAMM,SAAWwE,EACV,WAGFC,EAAUpE,EAAQX,GAG3B,SAAS8E,EAAcnE,EAAQX,GAC7B,OAAIW,EAAOa,MAAM,eACfxB,EAAMM,SAAWyE,EACV,MAGFA,EAAUpE,EAAQX,GAG3B,SAAS+E,EAAUpE,EAAQX,GACzB,OAAIW,EAAOa,MAAM1B,IACfE,EAAMM,SAAWyE,EACV,UAGLpE,EAAOa,MAAM3B,IACfG,EAAMM,SAAWyE,EACV,aAGFC,EAAcrE,EAAQX,GAG/B,SAASgF,EAAcrE,EAAQX,GAC7B,OAAIW,EAAOa,MAAM,eAlKnB,SAAmCxB,EAAOU,EAAUJ,GAUlD,OATAN,EAAME,MAAQ,CACZC,OAAQH,EAAME,MACdE,MAAO,UACPC,SAAUL,EAAMK,SAAW,EAC3BC,SAAUA,EACVC,KAAMP,EAAMO,KACZG,SAAUA,GAEZV,EAAMO,KAAOP,EAAMM,SAAWqC,EACvB,KAyJEsC,CAA0BjF,EAAOT,EAAQH,OAAO8F,IAAKF,GAG1DrE,EAAOa,MAAM7B,IACfK,EAAMM,SAAW6E,EACV,iBAGY,KAAjBxE,EAAOC,QACTD,EAAOI,OACPf,EAAMM,SAAWU,EAAeoE,GACzB,MAGFA,EAAYzE,EAAQX,GAG7B,SAASmF,EAAoBxE,EAAQX,GACnC,OAAIW,EAAOa,MAAM,SACfxB,EAAMM,SAAW+E,EACV,MAIFL,EAAcrE,EAAQX,GAG/B,SAASqF,EAAmB1E,EAAQX,GAClC,IAAI+C,EAAKpC,EAAOC,OAEhB,MAAU,KAANmC,GAAmB,KAANA,GACf/C,EAAMM,SAAW0C,EAAWD,EAAI,UAAU,GAAM,EAAOiC,GACvDrE,EAAOI,OACAf,EAAMM,SAASK,EAAQX,IAGtB,KAAN+C,EACK/B,EAAegE,EAAfhE,CAA8BL,EAAQX,GAGrC,KAAN+C,EACK/B,EAAesE,EAAftE,CAAqCL,EAAQX,GAGlDW,EAAOa,MAAM,wBACfxB,EAAMM,SAAW0E,EACV,WAGFhE,EAAegE,EAAfhE,CAA8BL,EAAQX,GAG/C,SAASsF,EAAqB3E,EAAQX,GAGpC,OAFAW,EAAOS,OAAO,GAEVT,EAAOa,MAAM,iBACfxB,EAAMM,SAAWU,EAAesE,GACzB,OAGT3E,EAAOI,OACAiE,EAAcrE,EAAQX,IAG/B,SAASgD,EAAWuC,EAAOnF,EAAOoF,EAAOC,EAAWC,GAClD,OAAO,SAAU/E,EAAQX,GACvBQ,EAAeR,GACf,IAAI2F,EAAmC,GAA3BhF,EAAOiB,UAAUd,OAE7B,GAAIH,EAAOa,MAAM,OAAQmE,GACvB,OAAKA,GACL5F,EAAaC,EAAOA,EAAMK,UACnB,oBAFYD,EAKrB,GAAIO,EAAOa,MAAM,OAAQmE,GACvB,OAAKA,GACL3F,EAAMM,SAAWG,EAAY,IAAKT,EAAMM,UACjC,MAFYF,EAQrB,IAHA,IACI2C,EADA6C,GAAU,EAGiB,OAAvB7C,EAAKpC,EAAOI,SAAiB,CACnC,GAAIgC,GAAMwC,IAAUE,IAAcG,GAAU,CAC1C5F,EAAMM,SAAWoF,EACjB,MAGF,GAAIF,GAAe,KAANzC,IAAc6C,GACrBjF,EAAOiC,IAAI,KAAM,CACnBjC,EAAOS,OAAO,GACd,MAIJwE,GAAWA,GAAiB,MAAN7C,EAOxB,OAJIpC,EAAO4B,OAASqD,GAClBjF,EAAOS,OAAO,GAGThB,GAIX,SAASgF,EAAYzE,EAAQX,GAC3B,OAAIW,EAAOa,MAAM,SACfxB,EAAMM,SAAW1C,EACV,cAGL+C,EAAOa,MAAM,SAEfxB,EAAMM,SAAWsE,EACV,MAGLjE,EAAOa,MAAM,OAEfxB,EAAMM,SAAWqE,EACV,eAGTnC,EAAc7B,EAAQX,EAAO,GACtBA,EAAMM,SAASK,EAAQX,IAGhC,IAAI6D,EAAO,CAETvC,WAAY,WAGV,MAAO,CACLa,UAHchF,EAAWmE,WAAWhE,GAIpCuD,UAHc1D,EAAWmE,WAAW7D,GAIpCyC,MAAO,KACP2F,KAAM,KACNvF,SAAUsE,EACVrE,KAAMqE,EACNvE,SAAU,IAGdyF,UAAW,SAAmB9F,GAC5B,MAAO,CACLmC,UAAWhF,EAAW2I,UAAUxI,EAAU0C,EAAMmC,WAChDtB,UAAW1D,EAAW2I,UAAUrI,EAAUuC,EAAMa,WAChD6C,QAAS1D,EAAM0D,QACfC,SAAU3D,EAAM0D,SAAWvG,EAAW2I,UAAU9F,EAAM0D,QAAS1D,EAAM2D,UACrEzD,MAAOF,EAAME,MACb2F,KAAM7F,EAAM6F,KACZvF,SAAUN,EAAMM,SAChBC,KAAMP,EAAMO,OAGhBgB,MAAO,SAAeZ,EAAQX,GAC5B,GAAIW,EAAOoF,MAKT,IAJA/F,EAAMK,SAAWM,EAAOqF,cACxBhG,EAAM6E,aAAc,EACpB7E,EAAMM,SAAWN,EAAMO,KAEhBP,EAAME,OAASF,EAAME,MAAMG,SAAWL,EAAMK,UAA0B,eAAdL,EAAM6F,MACnE7F,EAAMO,KAAOP,EAAMM,SAAWN,EAAME,MAAMI,SAC1CN,EAAME,MAAQF,EAAME,MAAMC,OAC1BH,EAAM0D,QAAU,KAChB1D,EAAM2D,SAAW,KAIrB,GAAIhD,EAAOU,WAAY,OAAO,KAC9B,IAAIjB,EAAQJ,EAAMM,SAASK,EAAQX,GAGnC,OAFAA,EAAM6E,aAAc,EAChBzE,IAAOJ,EAAM6F,KAAOzF,GACjBd,EAASwE,eAAe1D,GAASd,EAASc,GAASA,GAE5D6F,UAAW,SAAmBjG,GAC5B,GAAIA,EAAM0D,SAAW1D,EAAM0D,QAAQuC,UACjC,OAAOjG,EAAM0D,QAAQuC,UAAUjG,EAAM2D,WAGzCuC,UAAW,SAAmBlG,GAC5B,OAAIA,EAAM0D,QAAgB,CACxB1D,MAAOA,EAAM2D,SACbE,KAAM7D,EAAM0D,SAEP,CACL1D,MAAOA,EACP6D,KAAMA,KAOZ,OAAOA,IACN,YAAa,QAChB1G,EAAWgJ,WAAW,cAAe,QACrChJ,EAAWgJ,WAAW,qBAAsB,QA3pB1CC,CAAI,EAAQ,IAAyB,EAAQ,IAA2B,EAAQ,M,oBCEjF,SAAUjJ,GACX,aAEA,IAAIkJ,EAAa,CACfC,gBAAiB,CACf,MAAQ,EACR,MAAQ,EACR,IAAM,EACN,KAAO,EACP,SAAW,EACX,OAAS,EACT,OAAS,EACT,IAAM,EACN,KAAO,EACP,OAAS,EACT,QAAU,EACV,MAAQ,EACR,MAAQ,EACR,OAAS,EACT,QAAU,EACV,OAAS,EACT,KAAO,EACP,UAAY,GAEdC,iBAAkB,CAChB,IAAM,EACN,IAAM,EACN,UAAY,EACZ,QAAU,EACV,GAAK,EACL,IAAM,EACN,IAAM,EACN,OAAS,EACT,IAAM,EACN,OAAS,EACT,IAAM,EACN,IAAM,GAERC,gBAAiB,CACf,GAAM,CACJ,IAAM,EACN,IAAM,GAER,GAAM,CACJ,IAAM,EACN,IAAM,GAER,GAAM,CACJ,IAAM,GAER,OAAU,CACR,QAAU,EACV,UAAY,GAEd,SAAY,CACV,UAAY,GAEd,EAAK,CACH,SAAW,EACX,SAAW,EACX,OAAS,EACT,YAAc,EACd,KAAO,EACP,KAAO,EACP,IAAM,EACN,UAAY,EACZ,QAAU,EACV,MAAQ,EACR,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,IAAM,EACN,QAAU,EACV,QAAU,EACV,IAAM,EACN,MAAQ,EACR,KAAO,EACP,IAAM,EACN,GAAK,EACL,KAAO,EACP,SAAW,EACX,OAAS,EACT,IAAM,GAER,GAAM,CACJ,IAAM,EACN,IAAM,GAER,GAAM,CACJ,IAAM,EACN,IAAM,GAER,MAAS,CACP,OAAS,EACT,OAAS,GAEX,GAAM,CACJ,IAAM,EACN,IAAM,GAER,MAAS,CACP,OAAS,GAEX,GAAM,CACJ,IAAM,EACN,IAAM,GAER,MAAS,CACP,OAAS,EACT,OAAS,GAEX,GAAM,CACJ,IAAM,IAGVC,YAAa,CACX,KAAO,GAETC,eAAe,EACfC,cAAc,EACdC,UAAU,GAERC,EAAY,CACdP,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACfC,cAAc,EACdG,qBAAqB,EACrBF,UAAU,GAEZzJ,EAAWC,WAAW,OAAO,SAAU2J,EAAYC,GACjD,IAaIC,EAAMC,EAbNC,EAAaJ,EAAWI,WACxB9J,EAAS,GACT+J,EAAWJ,EAAQ1J,SAAW+I,EAAaQ,EAE/C,IAAK,IAAIQ,KAAQD,EACf/J,EAAOgK,GAAQD,EAASC,GAG1B,IAAK,IAAIA,KAAQL,EACf3J,EAAOgK,GAAQL,EAAQK,GAMzB,SAASC,EAAO3G,EAAQX,GACtB,SAASuH,EAAMC,GAEb,OADAxH,EAAMM,SAAWkH,EACVA,EAAO7G,EAAQX,GAGxB,IAAI+C,EAAKpC,EAAOI,OAEhB,MAAU,KAANgC,EACEpC,EAAOiC,IAAI,KACTjC,EAAOiC,IAAI,KACTjC,EAAOa,MAAM,UAAkB+F,EAAME,EAAQ,OAAQ,QAAoB,KACpE9G,EAAOa,MAAM,MACf+F,EAAME,EAAQ,UAAW,WACvB9G,EAAOa,MAAM,WAAW,GAAM,IACvCb,EAAO+G,SAAS,aACTH,EA4Ff,SAASI,EAAQC,GACf,OAAO,SAAUjH,EAAQX,GAGvB,IAFA,IAAI+C,EAE2B,OAAvBA,EAAKpC,EAAOI,SAAiB,CACnC,GAAU,KAANgC,EAEF,OADA/C,EAAMM,SAAWqH,EAAQC,EAAQ,GAC1B5H,EAAMM,SAASK,EAAQX,GACzB,GAAU,KAAN+C,EAAW,CACpB,GAAa,GAAT6E,EAAY,CACd5H,EAAMM,SAAWgH,EACjB,MAGA,OADAtH,EAAMM,SAAWqH,EAAQC,EAAQ,GAC1B5H,EAAMM,SAASK,EAAQX,IAKpC,MAAO,QA/GU2H,CAAQ,KAEd,KAEAhH,EAAOiC,IAAI,MACpBjC,EAAO+G,SAAS,aAChB1H,EAAMM,SAAWmH,EAAQ,OAAQ,MAC1B,SAEPR,EAAOtG,EAAOiC,IAAI,KAAO,WAAa,UACtC5C,EAAMM,SAAWuH,EACV,eAEM,KAAN9E,GAGLpC,EAAOiC,IAAI,KACTjC,EAAOiC,IAAI,KACRjC,EAAO+G,SAAS,eAAiB/G,EAAOiC,IAAI,KAE5CjC,EAAO+G,SAAS,SAAW/G,EAAOiC,IAAI,KAGxCjC,EAAO+G,SAAS,cAAgB/G,EAAOiC,IAAI,MAGtC,OAAS,SAErBjC,EAAO+G,SAAS,SACT,MAMX,SAASG,EAAMlH,EAAQX,GACrB,IAAI+C,EAAKpC,EAAOI,OAEhB,GAAU,KAANgC,GAAmB,KAANA,GAAapC,EAAOiC,IAAI,KAGvC,OAFA5C,EAAMM,SAAWgH,EACjBL,EAAa,KAANlE,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAkE,EAAO,SACA,KACF,GAAU,KAANlE,EAAW,CACpB/C,EAAMM,SAAWgH,EACjBtH,EAAMA,MAAQ8H,EACd9H,EAAM+H,QAAU/H,EAAMgI,SAAW,KACjC,IAAIjH,EAAOf,EAAMM,SAASK,EAAQX,GAClC,OAAOe,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAASkH,KAAKlF,IACvB/C,EAAMM,SASV,SAAqBiF,GACnB,IAAI2C,EAAU,SAAiBvH,EAAQX,GACrC,MAAQW,EAAO4B,OACb,GAAI5B,EAAOI,QAAUwE,EAAO,CAC1BvF,EAAMM,SAAWuH,EACjB,MAIJ,MAAO,UAIT,OADAK,EAAQC,eAAgB,EACjBD,EAtBYE,CAAYrF,GAC7B/C,EAAMqI,eAAiB1H,EAAOV,SACvBD,EAAMM,SAASK,EAAQX,KAE9BW,EAAOa,MAAM,4CACN,QAoBX,SAASiG,EAAQrH,EAAOkI,GACtB,OAAO,SAAU3H,EAAQX,GACvB,MAAQW,EAAO4B,OAAO,CACpB,GAAI5B,EAAOa,MAAM8G,GAAa,CAC5BtI,EAAMM,SAAWgH,EACjB,MAGF3G,EAAOI,OAGT,OAAOX,GA2BX,SAASmI,EAAQvI,EAAO+H,EAASlD,GAC/B2D,KAAKrH,KAAOnB,EAAMkB,QAClBsH,KAAKT,QAAUA,EACfS,KAAKC,OAASzI,EAAMK,SACpBmI,KAAK3D,YAAcA,GACfxH,EAAOoJ,YAAY3C,eAAeiE,IAAY/H,EAAMkB,SAAWlB,EAAMkB,QAAQwH,YAAUF,KAAKE,UAAW,GAG7G,SAASC,EAAW3I,GACdA,EAAMkB,UAASlB,EAAMkB,QAAUlB,EAAMkB,QAAQC,MAGnD,SAASyH,EAAgB5I,EAAO6I,GAG9B,IAFA,IAAIC,IAES,CACX,IAAK9I,EAAMkB,QACT,OAKF,GAFA4H,EAAgB9I,EAAMkB,QAAQ6G,SAEzB1K,EAAOmJ,gBAAgB1C,eAAegF,KAAmBzL,EAAOmJ,gBAAgBsC,GAAehF,eAAe+E,GACjH,OAGFF,EAAW3I,IAIf,SAAS8H,EAAUb,EAAMtG,EAAQX,GAC/B,MAAY,WAARiH,GACFjH,EAAMgI,SAAWrH,EAAOV,SACjB8I,GACU,YAAR9B,EACF+B,EAEAlB,EAIX,SAASiB,EAAa9B,EAAMtG,EAAQX,GAClC,MAAY,QAARiH,GACFjH,EAAM+H,QAAUpH,EAAOiB,UACvBsF,EAAW,MACJ+B,GACE5L,EAAOyJ,qBAA+B,UAARG,GACvCC,EAAW,cACJ+B,EAAUhC,EAAMtG,EAAQX,KAE/BkH,EAAW,QACJ6B,GAIX,SAASC,EAAkB/B,EAAMtG,EAAQX,GACvC,GAAY,QAARiH,EAAgB,CAClB,IAAIc,EAAUpH,EAAOiB,UAGrB,OAFI5B,EAAMkB,SAAWlB,EAAMkB,QAAQ6G,SAAWA,GAAW1K,EAAOkJ,iBAAiBzC,eAAe9D,EAAMkB,QAAQ6G,UAAUY,EAAW3I,GAE/HA,EAAMkB,SAAWlB,EAAMkB,QAAQ6G,SAAWA,IAAmC,IAAxB1K,EAAO6L,cAC9DhC,EAAW,MACJiC,IAEPjC,EAAW,YACJkC,GAEJ,OAAI/L,EAAOyJ,qBAA+B,UAARG,GACvCC,EAAW,cACJiC,EAAWlC,EAAMtG,EAAQX,KAEhCkH,EAAW,QACJkC,GAIX,SAASD,EAAWlC,EAAMoC,EAASrJ,GACjC,MAAY,UAARiH,GACFC,EAAW,QACJiC,IAGTR,EAAW3I,GACJ8H,GAGT,SAASsB,EAAcnC,EAAMtG,EAAQX,GAEnC,OADAkH,EAAW,QACJiC,EAAWlC,EAAMtG,EAAQX,GAGlC,SAASiJ,EAAUhC,EAAMoC,EAASrJ,GAChC,GAAY,QAARiH,EAEF,OADAC,EAAW,YACJoC,EACF,GAAY,UAARrC,GAA4B,gBAARA,EAAwB,CACrD,IAAIc,EAAU/H,EAAM+H,QAChBC,EAAWhI,EAAMgI,SAUrB,OATAhI,EAAM+H,QAAU/H,EAAMgI,SAAW,KAErB,gBAARf,GAA0B5J,EAAOiJ,gBAAgBxC,eAAeiE,GAClEa,EAAgB5I,EAAO+H,IAEvBa,EAAgB5I,EAAO+H,GACvB/H,EAAMkB,QAAU,IAAIqH,EAAQvI,EAAO+H,EAASC,GAAYhI,EAAMK,WAGzDyH,EAIT,OADAZ,EAAW,QACJ+B,EAGT,SAASK,EAAYrC,EAAMtG,EAAQX,GACjC,MAAY,UAARiH,EAAyBsC,GACxBlM,EAAOsJ,eAAcO,EAAW,SAC9B+B,EAAUhC,EAAMtG,EAAQX,IAGjC,SAASuJ,EAAetC,EAAMtG,EAAQX,GACpC,MAAY,UAARiH,EAAyBuC,EAEjB,QAARvC,GAAkB5J,EAAOqJ,eAC3BQ,EAAW,SACJ+B,IAGT/B,EAAW,QACJ+B,EAAUhC,EAAMtG,EAAQX,IAGjC,SAASwJ,EAAmBvC,EAAMtG,EAAQX,GACxC,MAAY,UAARiH,EAAyBuC,EACtBP,EAAUhC,EAAMtG,EAAQX,GAGjC,OA3NAsH,EAAOmC,UAAW,EA2NX,CACLnI,WAAY,SAAoBoI,GAC9B,IAAI1J,EAAQ,CACVM,SAAUgH,EACVtH,MAAO8H,EACPzH,SAAUqJ,GAAc,EACxB3B,QAAS,KACTC,SAAU,KACV9G,QAAS,MAGX,OADkB,MAAdwI,IAAoB1J,EAAM0J,WAAaA,GACpC1J,GAETuB,MAAO,SAAeZ,EAAQX,GAE5B,IADKA,EAAM+H,SAAWpH,EAAOoF,QAAO/F,EAAMK,SAAWM,EAAOqF,eACxDrF,EAAOU,WAAY,OAAO,KAC9B4F,EAAO,KACP,IAAI7G,EAAQJ,EAAMM,SAASK,EAAQX,GAQnC,OANKI,GAAS6G,IAAkB,WAAT7G,IACrB8G,EAAW,KACXlH,EAAMA,MAAQA,EAAMA,MAAMiH,GAAQ7G,EAAOO,EAAQX,GAC7CkH,IAAU9G,EAAoB,SAAZ8G,EAAsB9G,EAAQ,SAAW8G,IAG1D9G,GAETqI,OAAQ,SAAgBzI,EAAO2J,EAAWC,GACxC,IAAI1I,EAAUlB,EAAMkB,QAEpB,GAAIlB,EAAMM,SAAS6H,cACjB,OAAInI,EAAMgI,UAAYhI,EAAMK,SAAiBL,EAAMqI,eAAiB,EAAcrI,EAAMK,SAAW8G,EAGrG,GAAIjG,GAAWA,EAAQwH,SAAU,OAAOvL,EAAW0M,KACnD,GAAI7J,EAAMM,UAAYuH,GAAS7H,EAAMM,UAAYgH,EAAQ,OAAOsC,EAAWA,EAASpI,MAAM,UAAU,GAAGV,OAAS,EAEhH,GAAId,EAAM+H,QACR,OAAyC,IAArC1K,EAAOyM,0BAA4C9J,EAAMgI,SAAWhI,EAAM+H,QAAQjH,OAAS,EAAcd,EAAMgI,SAAWb,GAAc9J,EAAO0M,0BAA4B,GAGjL,GAAI1M,EAAO2M,YAAc,cAAc/B,KAAK0B,GAAY,OAAO,EAC/D,IAAIM,EAAWN,GAAa,sBAAsBO,KAAKP,GAEvD,GAAIM,GAAYA,EAAS,GAEvB,KAAO/I,GAAS,CACd,GAAIA,EAAQ6G,SAAWkC,EAAS,GAAI,CAClC/I,EAAUA,EAAQC,KAClB,MACK,IAAI9D,EAAOkJ,iBAAiBzC,eAAe5C,EAAQ6G,SAGxD,MAFA7G,EAAUA,EAAQC,UAKjB,GAAI8I,EAET,KAAO/I,GAAS,CACd,IAAIiJ,EAAW9M,EAAOmJ,gBAAgBtF,EAAQ6G,SAC9C,IAAIoC,IAAYA,EAASrG,eAAemG,EAAS,IAAiC,MAA5B/I,EAAUA,EAAQC,KAI5E,KAAOD,GAAWA,EAAQC,OAASD,EAAQ2D,aACzC3D,EAAUA,EAAQC,KAGpB,OAAID,EAAgBA,EAAQuH,OAAStB,EAAuBnH,EAAM0J,YAAc,GAElFU,cAAe,gBACfC,kBAAmB,UACnBC,gBAAiB,SACjBC,cAAelN,EAAOC,SAAW,OAAS,MAC1CkN,WAAYnN,EAAOC,SAAW,OAAS,MACvCmN,cAAe,SAAuBzK,GAChCA,EAAMA,OAASuJ,IAAgBvJ,EAAMA,MAAQiJ,IAEnDyB,cAAe,SAAuB1K,GACpC,OAAOA,EAAM+H,QAAU,CACrBvK,KAAMwC,EAAM+H,QACZ4C,MAAqB,YAAd3K,EAAMiH,MACX,MAEN2D,kBAAmB,SAA2B5K,GAG5C,IAFA,IAAIkB,EAAU,GAEL2J,EAAK7K,EAAMkB,QAAS2J,EAAIA,EAAKA,EAAG1J,KACnC0J,EAAG9C,SAAS7G,EAAQ/B,KAAK0L,EAAG9C,SAGlC,OAAO7G,EAAQ4J,eAIrB3N,EAAWgJ,WAAW,WAAY,OAClChJ,EAAWgJ,WAAW,kBAAmB,OACpChJ,EAAW8G,UAAUH,eAAe,cAAc3G,EAAWgJ,WAAW,YAAa,CACxF3I,KAAM,MACNF,UAAU,IAxgBV8I,CAAI,EAAQ,M,oBCGb,SAAUjJ,GACX,aAEA,IAAI4N,EAAc,CAChBC,OAAQ,CAAC,CAAC,OAAQ,sBAAuB,cAAe,CAAC,OAAQ,kEAAmE,cAAe,CAAC,OAAQ,IAAK,cAAe,CAAC,KAAM,KAAM,eAC7L5K,MAAO,CAAC,CAAC,OAAQ,SAAU,OAAQ,CAAC,OAAQ,oCAAqC,OAAQ,CAAC,OAAQ,IAAK,cAAe,CAAC,KAAM,KAAM,SAiBjI6K,EAAkB,GAQtB,SAASC,EAAaC,EAAMC,GAC1B,IAAI5J,EAAQ2J,EAAK3J,MAPnB,SAAuB4J,GACrB,IAAIC,EAASJ,EAAgBG,GAC7B,OAAIC,IACGJ,EAAgBG,GAAQ,IAAIhM,OAAO,OAASgM,EAAO,yCAInCE,CAAcF,IACrC,OAAO5J,EAAQ,gBAAgB0I,KAAK1I,EAAM,IAAI,GAAK,GAGrD,SAAS+J,EAAaxD,EAASyD,GAC7B,OAAO,IAAIpM,QAAQoM,EAAW,IAAM,IAAM,OAAWzD,EAAU,MAAQ,KAGzE,SAAS0D,EAAQC,EAAMC,GACrB,IAAK,IAAIC,KAAOF,EAId,IAHA,IAAIG,EAAOF,EAAGC,KAASD,EAAGC,GAAO,IAC7BE,EAASJ,EAAKE,GAETG,EAAID,EAAOhL,OAAS,EAAGiL,GAAK,EAAGA,IACtCF,EAAKG,QAAQF,EAAOC,IAY1B5O,EAAWC,WAAW,aAAa,SAAUC,EAAQ4O,GACnD,IAAI3O,EAAWH,EAAWI,QAAQF,EAAQ,CACxCG,KAAM,MACNF,UAAU,EACVyM,yBAA0BkC,EAAalC,yBACvCD,0BAA2BmC,EAAanC,4BAEtCoC,EAAO,GACPC,EAAaF,GAAgBA,EAAaC,KAC1CE,EAAeH,GAAgBA,EAAaI,YAGhD,GAFAZ,EAAQV,EAAamB,GACjBC,GAAYV,EAAQU,EAAYD,GAChCE,EAAc,IAAK,IAAIL,EAAIK,EAAatL,OAAS,EAAGiL,GAAK,EAAGA,IAC9DG,EAAKlB,OAAOgB,QAAQ,CAAC,OAAQI,EAAaL,GAAGO,QAASF,EAAaL,GAAGlI,OAGxE,SAASlG,EAAKgD,EAAQX,GACpB,IAEI+H,EAFA3H,EAAQ9C,EAASiE,MAAMZ,EAAQX,EAAMmC,WACrCyJ,EAAM,UAAU3D,KAAK7H,GAGzB,GAAIwL,IAAQ,WAAW3D,KAAKtH,EAAOiB,aAAemG,EAAU/H,EAAMmC,UAAU4F,SAAW/H,EAAMmC,UAAU4F,QAAQwE,gBAAkBL,EAAKpI,eAAeiE,GACnJ/H,EAAM6H,MAAQE,EAAU,SACnB,GAAI/H,EAAM6H,OAAS+D,GAAO,KAAK3D,KAAKtH,EAAOiB,WAAY,CAC5D,IAAIiG,EAAQ,gBAAgBqC,KAAKlK,EAAM6H,OACvC7H,EAAM6H,MAAQ,KACd,IAAI2E,EAA+B,KAApB7L,EAAOiB,WAjC5B,SAA0B6K,EAASC,GACjC,IAAK,IAAIX,EAAI,EAAGA,EAAIU,EAAQ3L,OAAQiL,IAAK,CACvC,IAAI/H,EAAOyI,EAAQV,GACnB,IAAK/H,EAAK,IAAMA,EAAK,GAAGiE,KAAKiD,EAAawB,EAAS1I,EAAK,KAAM,OAAOA,EAAK,IA8B9B2I,CAAiBT,EAAKrE,EAAM,IAAKA,EAAM,IAC7EhE,EAAO1G,EAAWI,QAAQF,EAAQmP,GAClCI,EAAUrB,EAAa1D,EAAM,IAAI,GACjCgF,EAAStB,EAAa1D,EAAM,IAAI,GAEpC7H,EAAMuB,MAAQ,SAAUZ,EAAQX,GAC9B,OAAIW,EAAOa,MAAMoL,GAAS,IACxB5M,EAAMuB,MAAQ5D,EACdqC,EAAM8M,WAAa9M,EAAM+M,UAAY,KAC9B,MApFjB,SAAqBpM,EAAQc,EAAKrB,GAChC,IAAIuB,EAAMhB,EAAOiB,UACb+I,EAAQhJ,EAAIG,OAAOL,GASvB,OAPIkJ,GAAS,EACXhK,EAAOS,OAAOO,EAAIb,OAAS6J,GAClBhJ,EAAIH,MAAM,WACnBb,EAAOS,OAAOO,EAAIb,QACbH,EAAOa,MAAMC,GAAK,IAAQd,EAAOa,MAAMG,IAGvCvB,EA4EM8B,CAAYvB,EAAQkM,EAAQ7M,EAAM+M,UAAUxL,MAAMZ,EAAQX,EAAM8M,cAGzE9M,EAAM+M,UAAYlJ,EAClB7D,EAAM8M,WAAa3P,EAAWmE,WAAWuC,EAAMvG,EAASmL,OAAOzI,EAAMmC,UAAW,GAAI,UAC3EnC,EAAM6H,QACf7H,EAAM6H,OAASlH,EAAOiB,UAClBjB,EAAO4B,QAAOvC,EAAM6H,OAAS,MAGnC,OAAOzH,EAIT,MAAO,CACLkB,WAAY,WAEV,MAAO,CACLC,MAAO5D,EACPkK,MAAO,KACPkF,UAAW,KACXD,WAAY,KACZ3K,UANUhF,EAAWmE,WAAWhE,KASpCwI,UAAW,SAAmB9F,GAC5B,IAAIgN,EAMJ,OAJIhN,EAAM8M,aACRE,EAAQ7P,EAAW2I,UAAU9F,EAAM+M,UAAW/M,EAAM8M,aAG/C,CACLvL,MAAOvB,EAAMuB,MACbsG,MAAO7H,EAAM6H,MACbkF,UAAW/M,EAAM+M,UACjBD,WAAYE,EACZ7K,UAAWhF,EAAW2I,UAAUxI,EAAU0C,EAAMmC,aAGpDZ,MAAO,SAAeZ,EAAQX,GAC5B,OAAOA,EAAMuB,MAAMZ,EAAQX,IAE7ByI,OAAQ,SAAgBzI,EAAO2J,EAAWpJ,GACxC,OAAKP,EAAM+M,WAAa,UAAU9E,KAAK0B,GAAmBrM,EAASmL,OAAOzI,EAAMmC,UAAWwH,EAAWpJ,GAAeP,EAAM+M,UAAUtE,OAAezI,EAAM+M,UAAUtE,OAAOzI,EAAM8M,WAAYnD,EAAWpJ,GAAkBpD,EAAW0M,MAEvO3D,UAAW,SAAmBlG,GAC5B,MAAO,CACLA,MAAOA,EAAM8M,YAAc9M,EAAMmC,UACjC0B,KAAM7D,EAAM+M,WAAazP,OAI9B,MAAO,aAAc,OACxBH,EAAWgJ,WAAW,YAAa,aAxJjCC,CAAI,EAAQ,IAAyB,EAAQ,IAAe,EAAQ,IAA6B,EAAQ,M,oBCG1G,SAAUjJ,GACX,aAEAA,EAAWC,WAAW,QAAQ,SAAUC,GACtC,SAAS4P,EAAQC,GAGf,IAFA,IAAIC,EAAI,GAECpB,EAAI,EAAGqB,EAAIF,EAAMpM,OAAQiL,EAAIqB,IAAKrB,EACzCoB,EAAED,EAAMnB,KAAM,EAGhB,OAAOoB,EAGT,IAaIE,EAbAC,EAAWL,EAAQ,CAAC,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,QAAS,MAAO,WAAY,KAAM,OAAQ,QAAS,MAAO,MAAO,SAAU,QAAS,MAAO,KAAM,KAAM,SAAU,OAAQ,MAAO,KAAM,OAAQ,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,QAAS,SAAU,QAAS,OAAQ,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,OAAQ,SAAU,SAAU,SAAU,OAAQ,SAAU,YAAa,UAAW,UAAW,OAAQ,mBAAoB,SAAU,WAAY,UAAW,WAAY,WAAY,YACniBM,EAAcN,EAAQ,CAAC,MAAO,QAAS,OAAQ,MAAO,QAAS,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,UACnHO,EAAcP,EAAQ,CAAC,MAAO,UAC9BQ,EAAU,CACZ,IAAK,IACL,IAAK,IACL,IAAK,KAEHlO,EAAU,CACZ,IAAK,IACL,IAAK,IACL,IAAK,KAIP,SAASgI,EAAMmG,EAAQ/M,EAAQX,GAE7B,OADAA,EAAMM,SAASnB,KAAKuO,GACbA,EAAO/M,EAAQX,GAGxB,SAAS2N,EAAUhN,EAAQX,GACzB,GAAIW,EAAOoF,OAASpF,EAAOa,MAAM,WAAab,EAAO4B,MAEnD,OADAvC,EAAMM,SAASnB,KAAKyO,GACb,UAGT,GAAIjN,EAAOU,WAAY,OAAO,KAC9B,IACIoD,EAgMeoJ,EAAQC,EAjMvB/K,EAAKpC,EAAOI,OAGhB,GAAU,KAANgC,GAAmB,KAANA,GAAmB,KAANA,EAC5B,OAAOwE,EAAMvE,EAAWD,EAAI,SAAgB,KAANA,GAAmB,KAANA,GAAYpC,EAAQX,GAClE,GAAU,KAAN+C,EACT,OAuFJ,SAAqBpC,GAOnB,IANA,IAEII,EAFAwC,EAAQ5C,EAAOoB,IACf6F,EAAQ,EAERmG,GAAQ,EACRnI,GAAU,EAEmB,OAAzB7E,EAAOJ,EAAOI,SACpB,GAAK6E,EAaHA,GAAU,MAbE,CACZ,GAAI,MAAMoI,QAAQjN,IAAS,EACzB6G,SACK,GAAI,MAAMoG,QAAQjN,IAAS,GAEhC,KADA6G,EACY,EAAG,WACV,GAAY,KAAR7G,GAAwB,GAAT6G,EAAY,CACpCmG,GAAQ,EACR,MAGFnI,EAAkB,MAAR7E,EAOd,OADAJ,EAAOS,OAAOT,EAAOoB,IAAMwB,GACpBwK,EAjHDE,CAAYtN,GAAgB4G,EAAMvE,EAAWD,EAAI,YAAY,GAAOpC,EAAQX,GAAmB,WAC9F,GAAU,KAAN+C,EAAW,CACpB,IAAI3C,EAAQ,SACRoF,GAAQ,EACR7E,EAAOiC,IAAI,KAAMxC,EAAQ,OAAgBO,EAAOiC,IAAI,QAASxC,EAAQ,SAAkBO,EAAOiC,IAAI,OAAQxC,EAAQ,WAAoBO,EAAOiC,IAAI,WACnJxC,EAAQ,SACRoF,GAAQ,GAEV,IAAI0I,EAAQvN,EAAOiC,IAAI,YACvB,OAAKsL,GACDT,EAAQU,qBAAqBD,KAAQA,EAAQT,EAAQS,IAClD3G,EAAMvE,EAAWkL,EAAO9N,EAAOoF,GAAO,GAAO7E,EAAQX,IAFzC,WAGd,GAAU,KAAN+C,EAET,OADApC,EAAO+B,YACA,UACF,GAAU,KAANK,IAAc0B,EAAI9D,EAAOa,MAAM,qDACxC,OAAO+F,GA2KUsG,EA3KQpJ,EAAE,GA2KFqJ,EA3KMrJ,EAAE,GA4K5B,SAAU9D,EAAQX,GAGvB,OAFI8N,GAAWnN,EAAOU,WAClBV,EAAOa,MAAMqM,GAAS7N,EAAMM,SAAS8N,MAAWzN,EAAO+B,YACpD,WA/K+B/B,EAAQX,GACzC,GAAU,KAAN+C,EAET,OADIpC,EAAOiC,IAAI,KAAMjC,EAAO+G,SAAS,cAAuB/G,EAAOiC,IAAI,KAAMjC,EAAO+G,SAAS,QAAa/G,EAAO+G,SAAS,SACnH,SACF,GAAI,KAAKO,KAAKlF,GAEnB,OADApC,EAAOa,MAAM,6CACN,SACF,GAAU,KAANuB,EAAW,CACpB,KAAOpC,EAAOa,MAAM,cAGpB,OADIb,EAAOiC,IAAI,MAAOjC,EAAO+G,SAAS,MAAW/G,EAAOI,OACjD,SACF,GAAU,KAANgC,EACT,OAAIpC,EAAOiC,IAAI,KAAa2E,EAAMvE,EAAW,IAAK,QAAQ,GAAQrC,EAAQX,GACtEW,EAAOiC,IAAI,KAAa2E,EAAMvE,EAAW,IAAK,QAAQ,GAAOrC,EAAQX,GAErEW,EAAOiC,IAAI,WACbjC,EAAOiC,IAAI,UACJ,QAILjC,EAAOiC,IAAI,sBACN,OAILjC,EAAOiC,IAAI,2BACbjC,EAAO+G,SAAS,oBAEhB/G,EAAOiC,IAAI,YACJ,QAGF,WACF,GAAU,KAANG,GAAapC,EAAOa,MAAM,2BAGnC,OAFAb,EAAOiC,IAAI,KACXjC,EAAO+G,SAAS,mBACT,aACF,GAAU,KAAN3E,EAST,OARIpC,EAAOiC,IAAI,aACbjC,EAAO+G,SAAS,QACP/G,EAAOiC,IAAI,MACpBjC,EAAOiC,IAAI,MAEXjC,EAAOI,OAGF,aACF,GAAI,uBAAuBkH,KAAKlF,GAGrC,OAFApC,EAAO+G,SAAS,mBAChB/G,EAAOiC,IAAI,UACPjC,EAAOiC,IAAI,KAAa,OACrB,QACF,GAAU,KAANG,IAAc/C,EAAMqO,SAA4B,KAAjBrO,EAAMsO,SAAmC,MAAjBtO,EAAMsO,QAGjE,IAAI,kBAAkBrG,KAAKlF,GAEhC,OADAsK,EAAUtK,EACH,KACF,GAAU,KAANA,GAAapC,EAAOiC,IAAI,KACjC,MAAO,QACF,GAAI,qBAAqBqF,KAAKlF,GAAK,CACxC,IAAIwL,EAAO5N,EAAO+G,SAAS,sBAE3B,MADU,KAAN3E,GAAcwL,IAAMlB,EAAU,KAC3B,WAEP,OAAO,KAXP,OADAA,EAAU,IACH,KA4CX,SAASmB,EAAoB5G,GAE3B,OADKA,IAAOA,EAAQ,GACb,SAAUjH,EAAQX,GACvB,GAAqB,KAAjBW,EAAOC,OAAe,CACxB,GAAa,GAATgH,EAEF,OADA5H,EAAMM,SAAS8N,MACRpO,EAAMM,SAASN,EAAMM,SAASQ,OAAS,GAAGH,EAAQX,GAEzDA,EAAMM,SAASN,EAAMM,SAASQ,OAAS,GAAK0N,EAAoB5G,EAAQ,OAEhD,KAAjBjH,EAAOC,SAChBZ,EAAMM,SAASN,EAAMM,SAASQ,OAAS,GAAK0N,EAAoB5G,EAAQ,IAG1E,OAAO+F,EAAUhN,EAAQX,IAI7B,SAASyO,IACP,IAAIC,GAAgB,EACpB,OAAO,SAAU/N,EAAQX,GACvB,OAAI0O,GACF1O,EAAMM,SAAS8N,MACRpO,EAAMM,SAASN,EAAMM,SAASQ,OAAS,GAAGH,EAAQX,KAG3D0O,GAAgB,EACTf,EAAUhN,EAAQX,KAI7B,SAASgD,EAAWuC,EAAOnF,EAAOoF,EAAOC,GACvC,OAAO,SAAU9E,EAAQX,GACvB,IACI+C,EADA6C,GAAU,EAQd,IAL2B,uBAAvB5F,EAAMkB,QAAQ+F,OAChBjH,EAAMkB,QAAUlB,EAAMkB,QAAQC,KAC9BR,EAAOiC,IAAI,MAGkB,OAAvBG,EAAKpC,EAAOI,SAAiB,CACnC,GAAIgC,GAAMwC,IAAUE,IAAcG,GAAU,CAC1C5F,EAAMM,SAAS8N,MACf,MAGF,GAAI5I,GAAe,KAANzC,IAAc6C,EAAS,CAClC,GAAIjF,EAAOiC,IAAI,KAAM,CACN,KAAT2C,IACFvF,EAAMkB,QAAU,CACdC,KAAMnB,EAAMkB,QACZ+F,KAAM,uBAIVjH,EAAMM,SAASnB,KAAKqP,KACpB,MACK,GAAI,QAAQvG,KAAKtH,EAAOC,QAAS,CACtCZ,EAAMM,SAASnB,KAAKsP,KACpB,OAIJ7I,GAAWA,GAAiB,MAAN7C,EAGxB,OAAO3C,GAYX,SAASwN,EAAiBjN,EAAQX,GAGhC,OAFIW,EAAOoF,OAASpF,EAAOa,MAAM,SAAWb,EAAO4B,OAAOvC,EAAMM,SAAS8N,MACzEzN,EAAO+B,YACA,UAGT,MAAO,CACLpB,WAAY,WACV,MAAO,CACLhB,SAAU,CAACqN,GACXtN,SAAU,EACVa,QAAS,CACP+F,KAAM,MACN5G,UAAWhD,EAAO8J,YAEpBwH,eAAe,EACfL,QAAS,KACTD,SAAS,IAGb9M,MAAO,SAAeZ,EAAQX,GAC5BqN,EAAU,KACN1M,EAAOoF,QAAO/F,EAAMK,SAAWM,EAAOqF,eAC1C,IACI4I,EADAxO,EAAQJ,EAAMM,SAASN,EAAMM,SAASQ,OAAS,GAAGH,EAAQX,GAE1D6O,EAAUxB,EAEd,GAAa,SAATjN,EAAkB,CACpB,IAAI0O,EAAOnO,EAAOiB,UAGL,YAFbxB,EAAyB,KAAjBJ,EAAMsO,QAAiB,WAAahB,EAASa,qBAAqBxN,EAAOiB,WAAa,UAAY,SAASqG,KAAK6G,GAAQ,MAAyB,OAAjB9O,EAAMsO,SAAqC,SAAjBtO,EAAMsO,SAAsBtO,EAAMqO,QAAU,MAAQ,cAGpNQ,EAAUC,EACNvB,EAAYY,qBAAqBW,GAAOF,EAAS,SAAkBpB,EAAYW,qBAAqBW,GAAOF,EAAS,SAA2B,MAARE,GAAwB,UAARA,GAAqBnO,EAAOV,UAAYU,EAAOqF,cAAkD,MAAR8I,GAAgB9O,EAAMkB,QAAQb,SAAWL,EAAMK,WAAUuO,EAAS,UAA7FA,EAAS,UAYtO,OARIvB,GAAWjN,GAAkB,WAATA,KAAoBJ,EAAMsO,QAAUO,GAC7C,KAAXxB,IAAgBrN,EAAMqO,SAAWrO,EAAMqO,SAC7B,UAAVO,GAAsB,WAAW3G,KAAKoF,GAAUrN,EAAMkB,QAAU,CAClEC,KAAMnB,EAAMkB,QACZ+F,KAAMoG,GAAWjN,EACjBC,SAAUL,EAAMK,WACI,UAAVuO,GAAsB,WAAW3G,KAAKoF,KAAarN,EAAMkB,QAAQC,OAAMnB,EAAMkB,QAAUlB,EAAMkB,QAAQC,MAC7GR,EAAO4B,QAAOvC,EAAM2O,cAA2B,MAAXtB,GAA4B,YAATjN,GACpDA,GAETqI,OAAQ,SAAgBzI,EAAO2J,GAC7B,GAAI3J,EAAMM,SAASN,EAAMM,SAASQ,OAAS,IAAM6M,EAAW,OAAOxQ,EAAW0M,KAC9E,IAAIkF,EAAYpF,GAAaA,EAAUqF,OAAO,GAC1CC,EAAKjP,EAAMkB,QACXgO,EAASD,EAAGhI,MAAQ1H,EAAQwP,IAAyB,WAAXE,EAAGhI,MAAqB,0CAA0CgB,KAAK0B,GACrH,OAAOsF,EAAG5O,UAAY6O,EAAS,EAAI7R,EAAO8J,aAAenH,EAAM2O,cAAgBtR,EAAO8J,WAAa,IAErGiD,cAAe,oCACf+E,YAAa,IACbC,KAAM,aAGVjS,EAAWgJ,WAAW,cAAe,QAhTnCC,CAAI,EAAQ","file":"static/js/12.baeb0162.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function (config) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"htmlmixed\"\n    });\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = {\n      html: htmlMode,\n      ruby: rubyMode\n    };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\",\n      // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\",\n      // no highlighting so far\n      creole: \"text/x-creole\",\n      // no highlighting so far\n      wiki: \"text/x-wiki\",\n      // no highlighting so far\n      mediawiki: \"text/x-mediawiki\",\n      // no highlighting so far\n      rdoc: \"text/x-rdoc\",\n      // no highlighting so far\n      builder: \"text/x-builder\",\n      // no highlighting so far\n      nokogiri: \"text/x-nokogiri\",\n      // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n\n    var embeddedRegexp = function (map) {\n      var arr = [];\n\n      for (var key in map) {\n        arr.push(key);\n      }\n\n      return new RegExp(\"^(\" + arr.join('|') + \"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\" + nameStartChar + \"](?::[\" + nameChar + \"]|[\" + nameChar + \"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\" + nameStartChar + \"][:\\\\.\" + nameChar + \"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function restore(stream, state) {\n        state.tokenize = tokenize;\n\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n\n        return state.tokenize(stream, state);\n      };\n\n      return function (stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function commaContinuable(column, tokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function (stream, state) {\n        var ch = stream.peek();\n\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function startRubySplat(tokenize) {\n      var rubyState;\n\n      var runSplat = function runSplat(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n\n          stream.next();\n        }\n\n        return ruby(stream, state);\n      };\n\n      return function (stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n\n      return html(stream, state);\n    }\n\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function (stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset,\n        // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n\n      stream.next();\n      return null;\n    }\n\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n\n      return attributeWrapper(stream, state);\n    }\n\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n\n      var factory = CodeMirror.modes[query];\n\n      if (factory) {\n        return factory(config, {\n          name: query\n        });\n      }\n\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n      state.subMode = subMode;\n      state.subState = subState;\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n\n      return slimClass(stream, state);\n    }\n\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n\n      return slimContent(stream, state);\n    }\n\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      } // should never happen, because of forward lookup\n\n\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function (stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n\n        return style;\n      };\n    }\n\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n\n      if (stream.match(/^\\/$/)) {\n        // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n\n      if (stream.match(/^:/)) {\n        // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function startState() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n      blankLine: function blankLine(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n      innerMode: function innerMode(state) {\n        if (state.subMode) return {\n          state: state.subState,\n          mode: state.subMode\n        };\n        return {\n          state: state,\n          mode: mode\n        };\n      } //indent: function(state) {\n      //  return state.indented;\n      //}\n\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ruby\", function (config) {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj([\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"]);\n    var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\n    var dedentWords = wordObj([\"end\", \"until\"]);\n    var opening = {\n      \"[\": \"]\",\n      \"{\": \"}\",\n      \"(\": \")\"\n    };\n    var closing = {\n      \"]\": \"[\",\n      \"}\": \"{\",\n      \")\": \"(\"\n    };\n    var curPunc;\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n        state.tokenize.push(readBlockComment);\n        return \"comment\";\n      }\n\n      if (stream.eatSpace()) return null;\n      var ch = stream.next(),\n          m;\n\n      if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n        return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n      } else if (ch == \"/\") {\n        if (regexpAhead(stream)) return chain(readQuoted(ch, \"string-2\", true), stream, state);else return \"operator\";\n      } else if (ch == \"%\") {\n        var style = \"string\",\n            embed = true;\n        if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string-2\";else if (stream.eat(/[wxq]/)) {\n          style = \"string\";\n          embed = false;\n        }\n        var delim = stream.eat(/[^\\w\\s=]/);\n        if (!delim) return \"operator\";\n        if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n        return chain(readQuoted(delim, style, embed, true), stream, state);\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n        return chain(readHereDoc(m[2], m[1]), stream, state);\n      } else if (ch == \"0\") {\n        if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n        return \"number\";\n      } else if (ch == \"?\") {\n        while (stream.match(/^\\\\[CM]-/)) {}\n\n        if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n        return \"string\";\n      } else if (ch == \":\") {\n        if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n        if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n        if (stream.eat(/[\\<\\>]/)) {\n          stream.eat(/[\\<\\>]/);\n          return \"atom\";\n        } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n        if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n          return \"atom\";\n        } // Symbols can't start by a digit\n\n\n        if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n          stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n          stream.eat(/[\\?\\!\\=]/);\n          return \"atom\";\n        }\n\n        return \"operator\";\n      } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n        stream.eat(\"@\");\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        return \"variable-2\";\n      } else if (ch == \"$\") {\n        if (stream.eat(/[a-zA-Z_]/)) {\n          stream.eatWhile(/[\\w]/);\n        } else if (stream.eat(/\\d/)) {\n          stream.eat(/\\d/);\n        } else {\n          stream.next(); // Must be a special global like $: or $!\n        }\n\n        return \"variable-3\";\n      } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        stream.eat(/[\\?\\!]/);\n        if (stream.eat(\":\")) return \"atom\";\n        return \"ident\";\n      } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n        curPunc = \"|\";\n        return null;\n      } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      } else if (ch == \"-\" && stream.eat(\">\")) {\n        return \"arrow\";\n      } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n        var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n        if (ch == \".\" && !more) curPunc = \".\";\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function regexpAhead(stream) {\n      var start = stream.pos,\n          depth = 0,\n          next,\n          found = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (!escaped) {\n          if (\"[{(\".indexOf(next) > -1) {\n            depth++;\n          } else if (\"]})\".indexOf(next) > -1) {\n            depth--;\n            if (depth < 0) break;\n          } else if (next == \"/\" && depth == 0) {\n            found = true;\n            break;\n          }\n\n          escaped = next == \"\\\\\";\n        } else {\n          escaped = false;\n        }\n      }\n\n      stream.backUp(stream.pos - start);\n      return found;\n    }\n\n    function tokenBaseUntilBrace(depth) {\n      if (!depth) depth = 1;\n      return function (stream, state) {\n        if (stream.peek() == \"}\") {\n          if (depth == 1) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else {\n            state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n          }\n        } else if (stream.peek() == \"{\") {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenBaseOnce() {\n      var alreadyCalled = false;\n      return function (stream, state) {\n        if (alreadyCalled) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        }\n\n        alreadyCalled = true;\n        return tokenBase(stream, state);\n      };\n    }\n\n    function readQuoted(quote, style, embed, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        if (state.context.type === 'read-quoted-paused') {\n          state.context = state.context.prev;\n          stream.eat(\"}\");\n        }\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              if (quote == \"}\") {\n                state.context = {\n                  prev: state.context,\n                  type: 'read-quoted-paused'\n                };\n              }\n\n              state.tokenize.push(tokenBaseUntilBrace());\n              break;\n            } else if (/[@\\$]/.test(stream.peek())) {\n              state.tokenize.push(tokenBaseOnce());\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return style;\n      };\n    }\n\n    function readHereDoc(phrase, mayIndent) {\n      return function (stream, state) {\n        if (mayIndent) stream.eatSpace();\n        if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n        return \"string\";\n      };\n    }\n\n    function readBlockComment(stream, state) {\n      if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase],\n          indented: 0,\n          context: {\n            type: \"top\",\n            indented: -config.indentUnit\n          },\n          continuedLine: false,\n          lastTok: null,\n          varList: false\n        };\n      },\n      token: function token(stream, state) {\n        curPunc = null;\n        if (stream.sol()) state.indented = stream.indentation();\n        var style = state.tokenize[state.tokenize.length - 1](stream, state),\n            kwtype;\n        var thisTok = curPunc;\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n          if (style == \"keyword\") {\n            thisTok = word;\n            if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n          }\n        }\n\n        if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n        if (curPunc == \"|\") state.varList = !state.varList;\n        if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n          prev: state.context,\n          type: curPunc || style,\n          indented: state.indented\n        };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n        if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize[state.tokenize.length - 1] != tokenBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0);\n        var ct = state.context;\n        var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n        return ct.indented + (closed ? 0 : config.indentUnit) + (state.continuedLine ? config.indentUnit : 0);\n      },\n      electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n});"],"sourceRoot":""}