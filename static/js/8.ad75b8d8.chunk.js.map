{"version":3,"sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/django/django.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","local","keywords","filters","operators","wordOperators","tokenBase","inVariable","inComment","inString","delimiter","previousTokenizer","escapeNext","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","join","htmlBase","djangoInner"],"mappings":"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","file":"static/js/8.ad75b8d8.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function startState() {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function innerMode(state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function blankLine(state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function () {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\", \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\", \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\", \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\", \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\", \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\", \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\", \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\", \"default\", \"default_if_none\", \"dictsort\", \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\", \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\", \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\", \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\", \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\", \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\", \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\", \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\", \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\", \"unordered_list\", \"upper\", \"urlencode\", \"urlize\", \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\"); // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n\n    function tokenBase(stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      } // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n\n\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n\n      return null;\n    } // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n\n\n    function inString(delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next(); // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    } // Apply Django template variable syntax highlighting\n\n\n    function inVariable(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to find the variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag(stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        } // Dot followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for property.\");\n        }\n      } // Attempt to match a pipe that precedes a filter\n\n\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        } // Pipe followed by a non-word character should be considered an error.\n\n\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error(\"Unexpected error while waiting for filter.\");\n        }\n      } // Highlight properties\n\n\n      if (state.waitProperty) {\n        state.waitProperty = false;\n\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true; // A property can be followed by another property\n\n          state.waitPipe = true; // A property can be followed by a filter\n\n          return \"property\";\n        }\n      } // Highlight filters\n\n\n      if (state.waitFilter) {\n        state.waitFilter = false;\n\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      } // Ignore all white spaces\n\n\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      } // Identify numbers\n\n\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      } // Identify strings\n\n\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      } // Attempt to match an operator\n\n\n      if (stream.match(operators)) {\n        return \"operator\";\n      } // Attempt to match a word operator\n\n\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      } // Attempt to match a keyword\n\n\n      var keywordMatch = stream.match(keywords);\n\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n\n        return \"keyword\";\n      } // Attempt to match a variable\n\n\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true; // A property can be followed by a filter\n\n        return \"variable\";\n      } // If found closing tag reset\n\n\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null; // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false; // Release the \"lock\"\n\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n\n        return \"tag\";\n      } // If nothing was found, advance to the next character\n\n\n      stream.next();\n      return \"null\";\n    } // Mark everything as comment inside the tag and the tag itself.\n\n\n    function inComment(stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase;else stream.skipToEnd();\n      return \"comment\";\n    } // Mark everything as a comment until the `blockcomment` tag closes.\n\n\n    function inBlockComment(stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function token(stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n  CodeMirror.defineMode(\"django\", function (config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});"],"sourceRoot":""}