{"version":3,"sources":["../node_modules/codemirror/mode/tornado/tornado.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","keywords","tokenBase","stream","state","eatWhile","close","ch","next","eat","tokenize","match","RegExp","join","startState","token","config","htmlBase","getMode","tornadoInner","overlayMode","defineMIME","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","inBlock","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","xmlCurrentContext","cx","push","reverse","mimeModes","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","Math","min","start","pos","combineTokens","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","local"],"mappings":"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","file":"static/js/9.036cc964.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tornado:inner\", function () {\n    var keywords = [\"and\", \"as\", \"assert\", \"autoescape\", \"block\", \"break\", \"class\", \"comment\", \"context\", \"continue\", \"datetime\", \"def\", \"del\", \"elif\", \"else\", \"end\", \"escape\", \"except\", \"exec\", \"extends\", \"false\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"in\", \"include\", \"is\", \"json_encode\", \"lambda\", \"length\", \"linkify\", \"load\", \"module\", \"none\", \"not\", \"or\", \"pass\", \"print\", \"put\", \"raise\", \"raw\", \"return\", \"self\", \"set\", \"squeeze\", \"super\", \"true\", \"try\", \"url_escape\", \"while\", \"with\", \"without\", \"xhtml_escape\", \"yield\"];\n    keywords = new RegExp(\"^((\" + keywords.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase(stream, state) {\n      stream.eatWhile(/[^\\{]/);\n      var ch = stream.next();\n\n      if (ch == \"{\") {\n        if (ch = stream.eat(/\\{|%|#/)) {\n          state.tokenize = inTag(ch);\n          return \"tag\";\n        }\n      }\n    }\n\n    function inTag(close) {\n      if (close == \"{\") {\n        close = \"}\";\n      }\n\n      return function (stream, state) {\n        var ch = stream.next();\n\n        if (ch == close && stream.eat(\"}\")) {\n          state.tokenize = tokenBase;\n          return \"tag\";\n        }\n\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n\n        return close == \"#\" ? \"comment\" : \"string\";\n      };\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function token(stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n  CodeMirror.defineMode(\"tornado\", function (config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var tornadoInner = CodeMirror.getMode(config, \"tornado:inner\");\n    return CodeMirror.overlayMode(htmlBase, tornadoInner);\n  });\n  CodeMirror.defineMIME(\"text/x-tornado\", \"tornado\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.overlayMode = function (base, overlay, combine) {\n    return {\n      startState: function startState() {\n        return {\n          base: CodeMirror.startState(base),\n          overlay: CodeMirror.startState(overlay),\n          basePos: 0,\n          baseCur: null,\n          overlayPos: 0,\n          overlayCur: null,\n          streamSeen: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          base: CodeMirror.copyState(base, state.base),\n          overlay: CodeMirror.copyState(overlay, state.overlay),\n          basePos: state.basePos,\n          baseCur: null,\n          overlayPos: state.overlayPos,\n          overlayCur: null\n        };\n      },\n      token: function token(stream, state) {\n        if (stream != state.streamSeen || Math.min(state.basePos, state.overlayPos) < stream.start) {\n          state.streamSeen = stream;\n          state.basePos = state.overlayPos = stream.start;\n        }\n\n        if (stream.start == state.basePos) {\n          state.baseCur = base.token(stream, state.base);\n          state.basePos = stream.pos;\n        }\n\n        if (stream.start == state.overlayPos) {\n          stream.pos = stream.start;\n          state.overlayCur = overlay.token(stream, state.overlay);\n          state.overlayPos = stream.pos;\n        }\n\n        stream.pos = Math.min(state.basePos, state.overlayPos); // state.overlay.combineTokens always takes precedence over combine,\n        // unless set to null\n\n        if (state.overlayCur == null) return state.baseCur;else if (state.baseCur != null && state.overlay.combineTokens || combine && state.overlay.combineTokens == null) return state.baseCur + \" \" + state.overlayCur;else return state.overlayCur;\n      },\n      indent: base.indent && function (state, textAfter, line) {\n        return base.indent(state.base, textAfter, line);\n      },\n      electricChars: base.electricChars,\n      innerMode: function innerMode(state) {\n        return {\n          state: state.base,\n          mode: base\n        };\n      },\n      blankLine: function blankLine(state) {\n        var baseToken, overlayToken;\n        if (base.blankLine) baseToken = base.blankLine(state.base);\n        if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n        return overlayToken == null ? baseToken : combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken;\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});"],"sourceRoot":""}